{% extends 'element.twig' %}

{% block definition %}
<h2>Definition</h2>

{% set struct_type = element.inner.fields[0].struct_type %}
{% set fields = element.inner.fields[0].fields %}

{% if struct_type == 'Plain' %}
<pre class="{{ type }}">
{% if element.visibility == 'private' %}priv {% endif %}struct {{ element.name }}{{ render_generics(element, type_tree) }} {
{% for field in fields %}
    {% if field.visibility == "private" %}priv {% endif %}{{ field.name }}: {{ short_type(field.inner.fields[0].type_, type_tree) }}{% if not loop.last %},{% endif %}

{% endfor %}
}
</pre>
{% elseif struct_type == 'Tuple' or struct_type == 'Newtype' %}
    <pre class="{{ type }}">{% if element.visibility == 'private' %}priv {% endif %}struct {{ element.name }}{{ render_generics(element, type_tree) }}({% for field in fields %}{{ short_type(field.inner.fields[0].type_, type_tree) }}{% if not loop.last %}, {% endif %}{% endfor %});</pre>
{% elseif struct_type == 'Unit' %}
    <pre class="{{ type }}">{% if element.visibility == 'private' %}priv {% endif %}struct {{ element.name }}{{ render_generics(element, type_tree) }};</pre>
{% else %}
    <pre class="{{ type }}">Unkwown struct type: {{ struct_type }}</pre>
{% endif %}

{% endblock %}

{% block extra %}
    {% set all_impls = {impls: type_tree.impls[element.id], trait_impls: filter_priv_traits(type_tree.implsfor[element.id])} %}

    {% for type, impls in all_impls %}
        {% if impls is not empty %}
            {% if type == 'trait_impls' %}
                <h2 id="implementations">Trait Implementations</h2>
            {% else %}
                <h2 id="methods">Methods</h2>
            {% endif %}

            {% for impl in impls %}
                <pre class="struct">
impl{{ render_generics(impl, type_tree) }} {% if type == 'trait_impls' %}of {{ short_type(impl.inner.fields[0].trait_, type_tree) }} for {% endif %}{{ short_type(impl.inner.fields[0].for_, type_tree) }} {
{% for method in impl.inner.fields[0].methods %}
    {{ render_fn(method, type_tree) }} { {% set src_url = source_url(method, crate) %}{% if src_url is not empty %}<a title="View sources" href="{{ src_url }}">...</a>{% else %}...{% endif %} }
{% endfor %}
}</pre>
                <table>
                    {% for method in impl.inner.fields[0].methods %}
                        {% set docs = extract_docs(method) %}
                        {% if docs is empty %}
                            {% set docs = extract_parent_docs(impl, method.name) %}
                        {% endif %}

                        {% if docs is not empty %}
                            <tr>
                                <td>{{ method.name }}</td>
                                <td class="docblock">{{ docs }}</td>
                            </tr>
                        {% endif %}
                    {% endfor %}
                </table>
            {% endfor %}
        {% endif %}
    {% endfor %}
{% endblock %}
