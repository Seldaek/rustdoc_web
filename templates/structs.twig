{% extends 'element.twig' %}

{% block definition %}
<h2>Definition</h2>

{% set struct_type = element.inner.fields[0].struct_type %}
{% set fields = element.inner.fields[0].fields %}

{% if struct_type == 'Plain' %}
<pre class="{{ type }}">
struct {{ element.name }}{{ render_generics(element, type_tree) }} {
{% for field in fields %}
    {% if field.visibility == "private" %}priv {% endif %}{{ field.name }}: {{ short_type(field.inner.fields[0].type_, type_tree) }}{% if not loop.last %},{% endif %}

{% endfor %}
}
</pre>
{% elseif struct_type == 'Tuple' or struct_type == 'Newtype' %}
    <pre class="{{ type }}">struct {{ element.name }}{{ render_generics(element, type_tree) }}({% for field in fields %}{{ short_type(field.inner.fields[0].type_, type_tree) }}{% if not loop.last %}, {% endif %}{% endfor %});</pre>
{% elseif struct_type == 'Unit' %}
    <pre class="{{ type }}">struct {{ element.name }}{{ render_generics(element, type_tree) }};</pre>
{% else %}
    <pre class="{{ type }}">Unkwown struct type: {{ struct_type }}</pre>
{% endif %}

{% endblock %}

{% block extra %}
    {% set impls = type_tree.impls[element.id] %}
    {% set trait_impls = type_tree.implsfor[element.id] %}

    {% if impls is not empty %}
        <h2>Methods</h2>

        {% for impl in impls %}
            <h3><code>impl{{ render_generics(impl, type_tree) }} {{ short_type(impl.inner.fields[0].for_, type_tree) }}</code></h3>
            <table>
                {% for method in impl.inner.fields[0].methods %}
                    <tr>
                        <td>{{ method.name }}</td>
                        <td>{{ extract_docs(method) }}</td> {# TODO markdown #}
                    </tr>
                    <tr>
                        <td></td>
                        <td><code>{{ render_fn(method, type_tree) }}</code></td>
                    </tr>
                {% endfor %}
            </table>
        {% endfor %}
    {% endif %}

    {% if trait_impls is not empty %}
        <h2>Trait Implementations</h2>

        {% for impl in trait_impls %}
            <h3><code>impl{{ render_generics(impl, type_tree) }} of {{ short_type(impl.inner.fields[0].trait_, type_tree) }} for {{ short_type(impl.inner.fields[0].for_, type_tree) }}</code></h3>
            <table>
                {% for method in impl.inner.fields[0].methods %}
                    <tr>
                        <td>{{ method.name }}</td>
                        <td>{{ extract_docs(method) }}</td> {# TODO markdown #}
                    </tr>
                    <tr>
                        <td></td>
                        <td><code>{{ render_fn(method, type_tree) }}</code></td>
                    </tr>
                {% endfor %}
            </table>
        {% endfor %}
    {% endif %}
{% endblock %}
